{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/prepararEventos.js","actions/events.js","actions/auth.js","hooks/useForm.js","componentes/auth/LoginScreen.js","componentes/ui/NavBar.js","helpers/calendar-messages-es.js","componentes/calendar/CalendarEvent.js","actions/ui.js","componentes/calendar/CalendarModal.js","componentes/ui/AgregarNuevoBotonFlotante.js","componentes/ui/BotonEliminarEvento.js","componentes/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js","helpers/fetch.js"],"names":["types","initialState","checking","eventos","eventoActivo","estadoInicial","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","prepararEventos","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","useState","values","setvalues","reset","newStateForm","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleGegisterInputChange","className","placeholder","onChange","onClick","email","password","preventDefault","a","fetchSinToken","respuesta","json","body","ok","localStorage","setItem","token","Date","getTime","uid","msg","Swal","fire","onSubmit","NavBar","useSelector","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","second","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","tituloValido","setTituloValido","form","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","minDate","autoComplete","rows","momentStart","momentEnd","isSameOrAfter","trim","length","fetchConToken","console","log","getState","evento","_id","eventStartAddNew","AgregarNuevoBotonFlotante","BotonEliminarEvento","locale","localizer","momentLocalizer","CalendarScreen","getItem","lastView","setlastView","events","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById","baseUrl","process","module","exports","endpoint","data","method","url","fetch","headers","JSON","stringify"],"mappings":"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","file":"static/js/main.ae2a9723.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal:            '[ui] Open modal',\r\n    uiCloseModal:           '[ui] Close modal',\r\n\r\n    eventSetActive:         '[event] Set active',\r\n    eventLogout:            '[event] Logout',\r\n\r\n    eventStartAddNew:       '[event] Start add new',\r\n    eventAddNew:            '[event] Add new',\r\n    eventClearActiveEvent:  '[event] Clear active event',\r\n    eventUpdated:           '[event] Event updated',\r\n    eventDeleted:           '[event] Event deleted',\r\n    eventLoaded:           '[event] Events loaded',\r\n\r\n    authCheckingFinish:     '[auth] Finish checking login state',\r\n    authStartLogin:         '[auth] Start login',\r\n    authLogin:              '[auth] Login ',\r\n    authStartRegister:      '[auth] Start register',\r\n    authStartTokenRenew:    '[auth] Start Token Renew',\r\n    authLogout:             '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                checking:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    eventos : [],\r\n    eventoActivo: null // en teoria va a ser un objeto\r\n};\r\nexport const calendarReducer = (state =  initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            // console.log(state.eventos.push(action.payload));\r\n            return {\r\n                ...state,\r\n                eventos: [...state.eventos, action.payload ]\r\n            };\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                eventoActivo:action.payload\r\n            };\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                eventoActivo: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                eventos: state.eventos.map((e) => (e.id === action.payload.id) ? action.payload: e )\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                eventos: state.eventos.filter((e) => (e.id !== state.eventoActivo.id)),\r\n                eventoActivo: null\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                eventos: [...action.payload]\r\n            };\r\n        case types.eventLogout:\r\n            return {\r\n                initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst estadoInicial = {\r\n    modalOpen: false\r\n};\r\nexport const uiReducer = (state = estadoInicial, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n// la siguiente linea es del plugin para el middleware de las llamas asigcronas http\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n/*** \r\n * la siguiente linea es para que si necesitamos meter mas reducer, no tengamos que cambiar el codigo mucho,\r\n * solo lo agregamos a la lista y ya.\r\n * \r\n * recordemos que los store lo que hace es recibir las solicitues y en cierto modo decir que reducer hara la tarea\r\n*/\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// mas informacion en https://github.com/zalmoxisus/redux-devtools-extension#usage\r\n/**\r\n * composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ) es para poder manejar middleware en react\r\n */\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import moment from \"moment\";\r\n\r\n/**\r\n * esto es para formatear las fechas que recibo del backend\r\n */\r\nexport const prepararEventos = (eventos) => {\r\n    return eventos.map((e) =>({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepararEventos } from \"../helpers/prepararEventos\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n/**\r\n * lo que tiene export es lo que llamo desde fuera, lo que no, solo lo uso en este archivo, se que es tonto, pero aclaro\r\n*/\r\n// asincrono\r\nexport const eventStartAddNew = (e) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid, name } = getState().auth;\r\n        try {\r\n            const respuesta =  await fetchConToken('eventos', e, 'POST');\r\n            const body = await respuesta.json();\r\n            if (body?.ok) {\r\n                e.id = body.evento.id;\r\n                e.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(e));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (e) =>({\r\n    type: types.eventAddNew,\r\n    payload: e\r\n});\r\n\r\nexport const eventSetActive = (e) =>({\r\n    type: types.eventSetActive,\r\n    payload: e\r\n});\r\n\r\n// para eliminar la nota activa cuando seleccionan otra\r\nexport const eventClearActiveEvent = () =>({type: types.eventClearActiveEvent});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const respuesta =  await fetchConToken(`eventos/${event.id}`, event, 'PUT');\r\n            const body = await respuesta.json();\r\n            // console.log(body);\r\n            if (body?.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body?.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (e) =>({\r\n    type: types.eventUpdated,\r\n    payload: e\r\n});\r\n\r\n// para eliminar el evento o nota activa\r\n//export const eventStartDeleted = (id) => {\r\nexport const eventStartDeleted = () => {\r\n    /**\r\n     * para eliminar necesito id, tengo dos opciones,\r\n     * 1. usar un useSelect en el componente que llama a este evento y tomar el id, y pasarlo a esta funcion,\r\n     * 2 hacer que esta funcion, funto al dispatch tenga el getState, y de alli tomar el id, esta ultima es la qye hace fernando\r\n     * \r\n     * como existe un state llamado calendar, que tiene todos los eventos, y un campo llamado eventoActivo, de alli tomo el id que eliminare\r\n     */\r\n    // return async (dispatch) => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.eventoActivo;\r\n        try {\r\n            const respuesta =  await fetchConToken(`eventos/${id}`, {id}, 'DELETE');\r\n            const body = await respuesta.json();\r\n            // console.log(body);\r\n            if (body?.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body?.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({type: types.eventDeleted });\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const respuesta =  await fetchConToken('eventos');\r\n            const body = await respuesta.json();\r\n            // console.log(body);\r\n            if (body?.ok) {\r\n                const eventos = prepararEventos(body.eventos);\r\n                // const eventos =  body.eventos;\r\n                dispatch(eventLoaded(eventos));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (e) => ({\r\n    type: types.eventLoaded,\r\n    payload: e\r\n})\r\n\r\nexport const eventLogout = () => ({type:types.eventLogout});","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n/**\r\n * cuando el usuario presiona login, llama a la funcion startLogin,\r\n * esta es una funcion anonima, que recibe como parametro u dispatch, al terminar de hacer la peticion al servidor,\r\n * usando el dispatch llama a la funcion login, que lo que hace es invoicar al reducer de auth, en el case authLogin,\r\n * pasandole como parametro lo que necesita, este reducer 'authreducer'  actualiza el state del proyecto, en este caso la variable auth\r\n */\r\n// asincrono, llamada a servidor\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const respuesta = await fetchSinToken('auth',{ email, password}, 'POST');\r\n        const body      = await respuesta.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            dispatch(login(\r\n                {\r\n                    uid:body.uid,\r\n                    name:body.name,\r\n                }))\r\n        } else {\r\n            if (body?.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                Swal.fire('Error', 'Ha ocurrido un problema, por favor verifica', 'error');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// asincrono\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const respuesta = await fetchSinToken('auth/new',{ email, password, name}, 'POST');\r\n        const body      = await respuesta.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            // startLogin(email, password);\r\n            dispatch(login(\r\n                {\r\n                    uid:body.uid,\r\n                    name:body.name,\r\n                }))\r\n        } else {\r\n            if (body?.msg) {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                Swal.fire('Error', 'Ha ocurrido un problema al registar', 'error');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const respuesta = await fetchConToken('auth/renew',{ });\r\n        const body      = await respuesta.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n            dispatch(login(\r\n                {\r\n                    uid:body.uid,\r\n                    name:body.name,\r\n                }))\r\n        } else {\r\n            console.log(' ocurre cuando no hay token en la peticion o token invalido');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\n// no es  asincronada, pero fernando la colocar asi\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type:types.authCheckingFinish})\r\n\r\nconst login = (user) => ({\r\n    type:types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst logout = () => ({type:types.authLogout });","import { useState } from 'react'\r\n\r\n// initialState es el nombre de los input que deseo que tenga el formulario\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    // reset en los input su valor inicial, pero si se le envia una nueva data, entonces coloca esos valores nuevo a los value de los input\r\n    const reset = (newStateForm = initialState)=>{\r\n        setvalues(newStateForm);\r\n    }\r\n    const handleInputChange = ({target})=>{\r\n        setvalues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    // para login\r\n    const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail:'josueperezf@gmail.com',\r\n        lPassword:'123456',\r\n    });\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    // para registrar usuario\r\n    const [ formRegisterValues, handleGegisterInputChange] = useForm({\r\n        rName:'Marleny',\r\n        rEmail:'marleny@gmail.com',\r\n        rPassword1:'123456',\r\n        rPassword2:'123456',\r\n    });\r\n    const {rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n    \r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        // validamos que las claves sean iguales\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguakes', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                                onClick={handleLogin}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ handleGegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ handleGegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ handleGegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ handleGegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\"\r\n                                />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleLogout = (e) => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport './modal.css';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).second(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { eventoActivo } = useSelector( state => state.calendar );\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [tituloValido, setTituloValido] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const [form, setFormValues] = useState(initEvent);\r\n\r\n    const  handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...form,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const {notes, title, start, end} =  form;\r\n\r\n    useEffect(() => {\r\n        if (eventoActivo) {\r\n            setFormValues(eventoActivo);\r\n        }\r\n    }, [eventoActivo, setFormValues])\r\n\r\n    const closeModal = () => {\r\n        // todo cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        // la siguiente liena es para borrar del state el valor de la nota activa, ya que el usuario cerro el modal\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues( initEvent );\r\n    }\r\n    const cambioFechaInicio = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...form,\r\n            start: e\r\n        });\r\n    }\r\n    const cambioFechaFin = (e) => {\r\n        // const date = (e.timeStamp) ? Date(e.timeStamp) : null;\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...form,\r\n            // end: date,\r\n            end: e,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        /**\r\n         * si la fecha de inicio es igual o esta despues de la fecha fin, yo no debo dejarla pasar\r\n         * la fecha mayor debe ser mayor a fecha start\r\n         */\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n            return\r\n        }\r\n        // validacion para la caja de texto\r\n        if(title.trim().length < 2) {\r\n            return setTituloValido(false);\r\n        }\r\n\r\n        // verificamos si se esta agregando o editando, si hay evento activo estamos editando, si no existe, estamos creando\r\n        if (eventoActivo) {\r\n            dispatch(eventStartUpdate(form));\r\n        } else {\r\n            dispatch(eventStartAddNew(form));\r\n        }\r\n        \r\n        setTituloValido(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> Nuevo evento </h1>\r\n            <hr />\r\n            <form className=\"container\" >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={cambioFechaInicio}\r\n                        value={dateStart}\r\n                        \r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={cambioFechaFin}\r\n                        value={dateEnd}\r\n                        minDate = {dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        className={ `form-control ${ !tituloValido && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AgregarNuevoBotonFlotante = () => {\r\n    const dispatch = useDispatch();\r\n    // uiOpenModal\r\n    const handlerAddEvent = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handlerAddEvent}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch,\r\n    // useSelector\r\n} from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const BotonEliminarEvento = () => {\r\n    const dispatch = useDispatch();\r\n    // const {eventoActivo} = useSelector(state => state.calendar);\r\n\r\n    const handlerDelete = () => {\r\n        //dispatch(eventStartDeleted(eventoActivo.id));\r\n        dispatch(eventStartDeleted());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handlerDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AgregarNuevoBotonFlotante } from '../ui/AgregarNuevoBotonFlotante';\r\nimport { BotonEliminarEvento } from '../ui/BotonEliminarEvento';\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment)\r\n/*const events = [{\r\n    title: 'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end:   moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar pastel',\r\n    user: {\r\n        _id: '1234',\r\n        name: 'Fernando'\r\n    }\r\n    // la informacion que esta en este return, sera enviada al compoente CalendarEvent que nosotros definimos\r\n}];*/\r\nexport const CalendarScreen = () => {\r\n    // la siguiente linea es para que tenga la ultima seccion visitada del calendario, si no tiene nada, entonces que abra el mes\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month' );\r\n    const dispatch = useDispatch();\r\n    const { eventoActivo } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n    const { eventos: events } = useSelector( state => state.calendar );\r\n\r\n    /**\r\n     * \r\n     * para traer la data de la base de datos, esto se llamara solo una vez\r\n     */\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        console.log('doble click');\r\n        dispatch(uiOpenModal());\r\n    }\r\n    const onSelect = (e) => {\r\n        console.log('seleccionado');\r\n        dispatch(eventSetActive(e));\r\n    }\r\n    const onViewChange  = (e) => {\r\n        // estpo es para que al cambiar de pestaña, almacene en localStorage la pestaña que visito, por si recarga la pagina no pierda el lugar donde estaba\r\n        setlastView(e)\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectFuera = (e) => {\r\n        // si hace click fuera de algun evento, quitp el evento que este como activo, con ello desaparece el boton eliminar\r\n        // esto serviria para hacer que por ejemplo, se abra el modal y le asigne una fecha especifica al modal como fecha de inicio, eso no lo va a hacer fernando,\r\n        // pero con el evento ya se tienen esos valores\r\n        // console.log(e);\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected ) => {\r\n        // console.log({event });\r\n        // si el evento fue creado por la persona que tiene la sesion abierta, se ve el background de un color, sino de otro\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        };\r\n        \r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar/>\r\n            {\r\n                events && \r\n                <Calendar\r\n                    localizer={localizer}\r\n                    events={events}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    messages={messages}\r\n                    eventPropGetter={eventStyleGetter}\r\n                    onDoubleClickEvent = {onDoubleClick}\r\n                    onSelectEvent={onSelect}\r\n                    onSelectSlot={onSelectFuera}\r\n                    selectable= {true}\r\n                    onView={onViewChange}\r\n                    view={lastView}\r\n                    components={{\r\n                        event: CalendarEvent\r\n                    }}\r\n                    />\r\n            }\r\n            <AgregarNuevoBotonFlotante/>\r\n            {\r\n                eventoActivo && <BotonEliminarEvento/>\r\n            }\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    /**\r\n     * este router recibe tres parametros\r\n     * isAuthenticated => boolean que determina si tiene usuario o no, sino tiene usuario lo manda a login\r\n     * component:Component => recibe component, como es un componente lo renombra a Component con la letra mayuscula\r\n     * este lo que hace es recibir el componente de la ruta que quiere renderizar,  al recibirlo si esta autenticado lo carga, sino a login\r\n     * ...rest => es para que todos los demas parametros que pueda recibir no los pierda, sino que los envie al componente que venga por Component\r\n     */\r\n\r\n    /**\r\n     *  el return tiene un route basico, pero en la seccion de component, recibe una funcion, que en vez de llaves tiene parentesis\r\n     * {...rest} => envia todos los parametros que el tenga\r\n     * component evalua si esta autenticado, si lo esta, los props o mejor dicho, los parametros que recibe la el componentes,\r\n     * se los envia a Component para que no los pierda\r\n     */\r\n     \r\n    // localStorage.setItem('ultimaRuta',rest.location.pathname+rest.location.search );\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to='/login' />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                    ? (<Redirect to='/' />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../componentes/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../componentes/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    // verificamos si esta logueado\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n    console.log(checking);\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n    // al colocarle los dos !! a la variable, hacemos que si la variable uid tiene dato tome un true, sino un false\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid}  />\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nimport { AppRouter } from './router/AppRouter'\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store} >\n      <AppRouter/>\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n// con la siguiente linea vemos que variables de entorno esta tomando, si las de desarrollo o las de produccion\n//console.log(process.env);\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n","const baseUrl = `${process.env.REACT_APP_API_URL}`;\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return  fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token':token\r\n            }\r\n        });\r\n    } else {\r\n        return  fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token':token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\nmodule.exports = {\r\n    fetchSinToken, \r\n    fetchConToken\r\n};"],"sourceRoot":""}